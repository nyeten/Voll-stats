package com.app;



import java.util.List;
import javafx.application.Application;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javafx.scene.layout.VBox;
import javafx.scene.layout.Pane;
import java.io.IOException;
import javafx.scene.control.TextField;
import java.util.ArrayList;


public class TeamMenu {

    @FXML
    private Pane root;
    @FXML
    private Text curTeam;
    @FXML
    private Button editTeam;
    @FXML
    private Button addTeam;
    @FXML
    private Button next;
    @FXML
    private Button last;
    @FXML
    private Button delTeam;

    Stage stage;

    int teamIndex = 0;
    int playerIndex;
    int numTeams = 0;

    //List<String> currentTeam = new List<>();
    ArrayList<Team> teams;
    
    public TeamMenu(Stage stage) {
        this.stage = stage;
        if (teams != null) {
            curTeam.setText(teams.get(0).getName());
        } else {
            
        }
        this.teams = new ArrayList<>();
    }

    @FXML
    public void addTeam() {
        // disable  buttons while adding a team
        editTeam.setDisable(true);
        addTeam.setDisable(true);
        next.setDisable(true);
        delTeam.setDisable(true);
        last.setDisable(true);
        // TextField for entering the team name
        TextField name = textfield(200, 50, "Enter Team Name");
        root.getChildren().add(name);
        // Save button saving the new team
        Button save = button(450, 200, "Save Team");
        root.getChildren().add(save);

        // Cancel button canceling the add team operation
        Button cancel = button(540, 200, "Cancel");
        root.getChildren().add(cancel);

        //sets action for save button, adding text in name text field to teams list
        save.setOnAction(e -> {
            if (!name.getText().trim().isEmpty()) {
                Team newTeam = new Team(name.getText());
                teams.add(newTeam);
                if (curTeam.getText().equals("Current Team")) {
                    curTeam.setText(teams.get(0).getName());
                }
                //currentTeam.add(curTeam);
                // name.clear();
                root.getChildren().removeAll(name, cancel, save);
                editTeam.setDisable(false);
                addTeam.setDisable(false);
                next.setDisable(false);
                delTeam.setDisable(false);
                last.setDisable(false);
                numTeams++;
            }
        });

        //sets action for cancel button, removing text field and buttons
        cancel.setOnAction(e -> {
            root.getChildren().removeAll(name, cancel, save);
            editTeam.setDisable(false);
            addTeam.setDisable(false);
            next.setDisable(false);
            delTeam.setDisable(false);
            last.setDisable(false);
        });


    }

    @FXML
    public void nextTeam() {
        if (numTeams >= teamIndex+2) {
            if (teams.get(teamIndex+1)!= null) {
                curTeam.setText(teams.get(++teamIndex).getName());
            }
        }
    }

    @FXML
    public void lastTeam() {
        if (0 <= teamIndex-1) {
            if (teams.get(teamIndex-1)!= null) {
                curTeam.setText(teams.get(--teamIndex).getName());
            }
        }
    }


    //Allows user to add players and changr team name

    @FXML
    public void editTeam() {
        Button saveTeam = button(400, 400 ,"save");
        if (teams.size() == 0) {
            return ;

        }
        playerIndex = 0;
        
        Text name = text(275, 100, "Player Name");
        root.getChildren().add(name);

        Text number = text(275, 130, "Player Number");
        root.getChildren().add(number);

        Text position = text(275, 160, "Player position");
        root.getChildren().add(position);


        Button addPlayer = button(450, 130, "Add Player");
        root.getChildren().add(addPlayer);
        
        Button lastPlayer = button(420, 90, "last");
        root.getChildren().add(lastPlayer);

        Button nextPlayer = button(460, 90, "next");
        root.getChildren().add(nextPlayer);

        // moves player index up and sets current player to that index
        nextPlayer.setOnAction(e -> {
            if (teams.get(teamIndex).size() >= playerIndex+2) {
                if (teams.get(teamIndex).getPlayer(playerIndex+1)!= null) {
                    playerIndex++;
                    name.setText(teams.get(teamIndex).getPlayer(playerIndex).getName());
                    number.setText(Integer.toString(teams.get(teamIndex).getPlayer(playerIndex).getNumber()));
                    position.setText(teams.get(teamIndex).getPlayer(playerIndex).getPosition());
                }
            }
        });

        // moves player index bck and sets current player to that index
        lastPlayer.setOnAction(e -> {
            if (0 <= playerIndex-1) {
                if (teams.get(teamIndex).getPlayer(playerIndex-1)!= null) {
                    playerIndex--;
                    name.setText(teams.get(teamIndex).getPlayer(playerIndex).getName());
                    number.setText(Integer.toString(teams.get(teamIndex).getPlayer(playerIndex).getNumber()));
                    position.setText(teams.get(teamIndex).getPlayer(playerIndex).getPosition());
                }
            }
        });

        //sets action for addPlayer button, adding text fields for player info
        addPlayer.setOnAction(e -> {

            if (teams.get(teamIndex).size() == 0) {
                //playerName = teams.get(teamIndex).getPlayerinfo;
            }
            // Create TextFields for entering the player info
            TextField namePrompt = textfield(270, 85, "Player Name");
            root.getChildren().add(namePrompt);

            TextField numberPrompt = textfield(270, 115, "Player Number");
            root.getChildren().add(numberPrompt);

            TextField positionPrompt = textfield(270, 145, "Player position");
            root.getChildren().add(positionPrompt);

            // Save button saving the new player
            Button save = button(530, 200, "Save Player");
            root.getChildren().add(save);

            //sets action for save button, adding text in name text field to teams list
            save.setOnAction(p -> {
                // be sure all prompts are filled
                if (!namePrompt.getText().trim().isEmpty() && !numberPrompt.getText().trim().isEmpty() && !positionPrompt.getText().trim().isEmpty()) {
                    teams.get(teamIndex).addPlayer(namePrompt.getText(), Integer.parseInt(numberPrompt.getText()), positionPrompt.getText());
                    namePrompt.setText(name.getText());
                    numberPrompt.setText(number.getText());
                    positionPrompt.setText(position.getText());
                    root.getChildren().removeAll(namePrompt, numberPrompt, positionPrompt, save);

                    // set text to first player if first player added
                    if (teams.get(teamIndex).size() == 1) {
                        name.setText(teams.get(teamIndex).getPlayer(0).getName());
                        number.setText(Integer.toString(teams.get(teamIndex).getPlayer(0).getNumber()));
                        position.setText(teams.get(teamIndex).getPlayer(0).getPosition());
                    };
                }
            });
        });

        saveTeam.setOnAction (s -> {
                root.getChildren().removeAll(name, number, position, addPlayer, lastPlayer, nextPlayer, saveTeam);
            }
        );
    }

    @FXML
    public void deleteTeam() {
        if (teams.size() == 0) {
            return;
        }
        teams.remove(teamIndex);
        numTeams--;
        if (teamIndex >= numTeams && numTeams > 0) {
            teamIndex = numTeams-1;
        }
        if (numTeams == 0) {
            curTeam.setText("Current Team");
        } else {
            curTeam.setText(teams.get(teamIndex).getName());
        }
    }
    
    public TextField textfield(int x, int y, String prompt) {
        TextField tf = new TextField();
        tf.setLayoutX(x);
        tf.setLayoutY(y);
        tf.setPromptText(prompt);
        return tf;
    }

    public Text text(int x, int y, String text) {
        Text tf = new Text();
        tf.setLayoutX(x);
        tf.setLayoutY(y);
        tf.setText(text);
        return tf;
    }

    public Button button(int x, int y, String text) {
        Button tf = new Button();
        tf.setLayoutX(x);
        tf.setLayoutY(y);
        tf.setText(text);
        return tf;
    }


}



    // <Button text='Next' layoutX="50" layoutY="50" onAction="#nextTeam"/>
    // <Button text='Delete Team' layoutX="70" layoutY="50" onAction="#deleteTeam"/>
    --------------------------------------------------------------------------------------------------------------
        --------------------------------------------------------------------------------------------------------------
            -------------------------------------------------------------------------------------------------------------
        --------------------------------------------------------------------------------------------------------------
    --------------------------------------------------------------------------------------------------------------